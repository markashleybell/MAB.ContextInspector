#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MAB.ContextInspector.Views.ContextInspector
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using MAB.ContextInspector;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/ContextInspector/Index.cshtml")]
    public partial class Index : System.Web.Mvc.WebViewPage<MAB.ContextInspector.Models.ContextInspectorViewModel>
    {
        public Index()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\ContextInspector\Index.cshtml"
  
    Layout = null;

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n    <head>\r\n        <meta");

WriteLiteral(" name=\"viewport\"");

WriteLiteral(" content=\"width=device-width\"");

WriteLiteral(" />\r\n        <title>Index</title>\r\n        <style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(">\r\n            \r\n            *, *:before, *:after {\r\n                -moz-box-siz" +
"ing: border-box;\r\n                -webkit-box-sizing: border-box;\r\n             " +
"   box-sizing: border-box;\r\n            }\r\n\r\n            body {\r\n               " +
" margin: 0;\r\n                padding: 0;\r\n                font-family: Helvetica" +
", Arial, \'DejaVu Sans\', \'Liberation Sans\', Freesans, sans-serif;\r\n              " +
"  font-size: 12px;\r\n            }\r\n\r\n            table {\r\n                margin" +
": 0;\r\n                border-collapse: collapse;\r\n                border-spacing" +
": 0;\r\n                width: 100%;\r\n            }\r\n\r\n            td, th {\r\n     " +
"           border: 1px solid #ddd;\r\n                text-align: left;\r\n         " +
"       vertical-align: top;\r\n                padding: 6px 30px 6px 10px;\r\n      " +
"      }\r\n\r\n            tr.data:nth-child(even) {\r\n                background-col" +
"or: #F5F5F5;\r\n            }\r\n\r\n            tr.data:hover {\r\n                back" +
"ground-color: #b0c3ff;\r\n            }\r\n\r\n            #col-key {\r\n               " +
" width: 25%;\r\n            }\r\n            #col-type {\r\n                width: 10%" +
";\r\n            }\r\n            #col-contents {\r\n                width: 65%;\r\n    " +
"        }\r\n            \r\n            pre {\r\n                outline: none;\r\n    " +
"            padding: 0;\r\n                margin: 0;\r\n            }\r\n\r\n          " +
"  .string {\r\n                color: green;\r\n            }\r\n\r\n            .number" +
" {\r\n                color: #a70000;\r\n            }\r\n\r\n            .boolean {\r\n  " +
"              color: blue;\r\n            }\r\n\r\n            .null {\r\n              " +
"  color: magenta;\r\n            }\r\n\r\n            .key {\r\n                color: #" +
"000000;\r\n            }\r\n\r\n            .varkey, .vartype {\r\n                font-" +
"family: monospace;\r\n            }\r\n\r\n            .main th {\r\n                bac" +
"kground-color: #00487d;\r\n                border-color: #00487d;\r\n               " +
" color: #fff;\r\n            }\r\n\r\n        </style>\r\n    </head>\r\n<body>\r\n");

            
            #line 99 "..\..\Views\ContextInspector\Index.cshtml"
    
            
            #line default
            #line hidden
            
            #line 99 "..\..\Views\ContextInspector\Index.cshtml"
     if (Model.CacheVariables.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <table>\r\n            <colgroup>\r\n                <col");

WriteLiteral(" id=\"col-key\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-type\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-contents\"");

WriteLiteral(" />\r\n            </colgroup>\r\n            <tr");

WriteLiteral(" class=\"main\"");

WriteLiteral(">\r\n                <th");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">Cache</th>\r\n            </tr>\r\n            ");

WriteLiteral("\r\n");

            
            #line 115 "..\..\Views\ContextInspector\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 115 "..\..\Views\ContextInspector\Index.cshtml"
             foreach (var variable in Model.CacheVariables)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" class=\"data\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" class=\"varkey\"");

WriteLiteral(">");

            
            #line 118 "..\..\Views\ContextInspector\Index.cshtml"
                                  Write(variable.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <td");

WriteLiteral(" class=\"vartype\"");

WriteLiteral("><a");

WriteAttribute("title", Tuple.Create(" title=\"", 2925), Tuple.Create("\"", 2961)
            
            #line 119 "..\..\Views\ContextInspector\Index.cshtml"
, Tuple.Create(Tuple.Create("", 2933), Tuple.Create<System.Object, System.Int32>(variable.Value.FullTypeName
            
            #line default
            #line hidden
, 2933), false)
);

WriteLiteral(">");

            
            #line 119 "..\..\Views\ContextInspector\Index.cshtml"
                                                                           Write(variable.Value.ShortTypeName);

            
            #line default
            #line hidden
WriteLiteral("</a></td>\r\n                    <td");

WriteLiteral(" class=\"value\"");

WriteLiteral(">");

            
            #line 120 "..\..\Views\ContextInspector\Index.cshtml"
                                 Write(variable.Value.Item);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                </tr>\r\n");

            
            #line 122 "..\..\Views\ContextInspector\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n");

            
            #line 124 "..\..\Views\ContextInspector\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 125 "..\..\Views\ContextInspector\Index.cshtml"
     if (Model.ApplicationVariables.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <table>\r\n            <colgroup>\r\n                <col");

WriteLiteral(" id=\"col-key\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-type\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-contents\"");

WriteLiteral(" />\r\n            </colgroup>\r\n            <tr");

WriteLiteral(" class=\"main\"");

WriteLiteral(">\r\n                <th");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">Application</th>\r\n            </tr>\r\n            ");

WriteLiteral("\r\n");

            
            #line 141 "..\..\Views\ContextInspector\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 141 "..\..\Views\ContextInspector\Index.cshtml"
             foreach (var variable in Model.ApplicationVariables)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" class=\"data\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" class=\"varkey\"");

WriteLiteral(">");

            
            #line 144 "..\..\Views\ContextInspector\Index.cshtml"
                                  Write(variable.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <td");

WriteLiteral(" class=\"vartype\"");

WriteLiteral("><a");

WriteAttribute("title", Tuple.Create(" title=\"", 3827), Tuple.Create("\"", 3863)
            
            #line 145 "..\..\Views\ContextInspector\Index.cshtml"
, Tuple.Create(Tuple.Create("", 3835), Tuple.Create<System.Object, System.Int32>(variable.Value.FullTypeName
            
            #line default
            #line hidden
, 3835), false)
);

WriteLiteral(">");

            
            #line 145 "..\..\Views\ContextInspector\Index.cshtml"
                                                                           Write(variable.Value.ShortTypeName);

            
            #line default
            #line hidden
WriteLiteral("</a></td>\r\n                    <td");

WriteLiteral(" class=\"value\"");

WriteLiteral(">");

            
            #line 146 "..\..\Views\ContextInspector\Index.cshtml"
                                 Write(variable.Value.Item);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                </tr>\r\n");

            
            #line 148 "..\..\Views\ContextInspector\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n");

            
            #line 150 "..\..\Views\ContextInspector\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 151 "..\..\Views\ContextInspector\Index.cshtml"
     if (Model.SessionVariables.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <table>\r\n            <colgroup>\r\n                <col");

WriteLiteral(" id=\"col-key\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-type\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-contents\"");

WriteLiteral(" />\r\n            </colgroup>\r\n            <tr");

WriteLiteral(" class=\"main\"");

WriteLiteral(">\r\n                <th");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">Session</th>\r\n            </tr>\r\n            ");

WriteLiteral("\r\n");

            
            #line 167 "..\..\Views\ContextInspector\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 167 "..\..\Views\ContextInspector\Index.cshtml"
             foreach (var variable in Model.SessionVariables)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" class=\"data\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" class=\"varkey\"");

WriteLiteral(">");

            
            #line 170 "..\..\Views\ContextInspector\Index.cshtml"
                                  Write(variable.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <td");

WriteLiteral(" class=\"vartype\"");

WriteLiteral("><a");

WriteAttribute("title", Tuple.Create(" title=\"", 4717), Tuple.Create("\"", 4753)
            
            #line 171 "..\..\Views\ContextInspector\Index.cshtml"
, Tuple.Create(Tuple.Create("", 4725), Tuple.Create<System.Object, System.Int32>(variable.Value.FullTypeName
            
            #line default
            #line hidden
, 4725), false)
);

WriteLiteral(">");

            
            #line 171 "..\..\Views\ContextInspector\Index.cshtml"
                                                                           Write(variable.Value.ShortTypeName);

            
            #line default
            #line hidden
WriteLiteral("</a></td>\r\n                    <td");

WriteLiteral(" class=\"value\"");

WriteLiteral(">");

            
            #line 172 "..\..\Views\ContextInspector\Index.cshtml"
                                 Write(variable.Value.Item);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                </tr>\r\n");

            
            #line 174 "..\..\Views\ContextInspector\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n");

            
            #line 176 "..\..\Views\ContextInspector\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var MAB = {\r\n            ContextInspector: {\r\n                syntaxHi" +
"ghlight: function (json) {\r\n                    if (json.indexOf(\'{\') != -1)\r\n  " +
"                      json = JSON.stringify(JSON.parse(json), undefined, 4);\r\n\r\n" +
"                    json = json.replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').rep" +
"lace(/>/g, \'&gt;\');\r\n                    return json.replace(/(\"(\\\\u[a-zA-Z0-9]{" +
"4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+" +
")?)/g, function (match) {\r\n                        var cls = \'number\';\r\n        " +
"                if (/^\"/.test(match)) {\r\n                            if (/:$/.te" +
"st(match)) {\r\n                                cls = \'key\';\r\n                    " +
"            match = match.replace(/\\\"/gi, \'\')\r\n                            } els" +
"e {\r\n                                cls = \'string\';\r\n                          " +
"  }\r\n                        } else if (/true|false/.test(match)) {\r\n           " +
"                 cls = \'boolean\';\r\n                        } else if (/null/.tes" +
"t(match)) {\r\n                            cls = \'null\';\r\n                        " +
"}\r\n                        return \'<span class=\"\' + cls + \'\">\' + match + \'</span" +
">\';\r\n                    });\r\n                },\r\n                init: function" +
" () {\r\n                    var elements = document.getElementsByClassName(\'value" +
"\');\r\n                    for (var i = 0; i < elements.length; i++) {\r\n          " +
"              elements[i].innerHTML = \'<pre>\' + MAB.ContextInspector.syntaxHighl" +
"ight(elements[i].innerHTML) + \'</pre>\';\r\n                    }\r\n                " +
"}\r\n            }\r\n        };\r\n\r\n        MAB.ContextInspector.init();\r\n    </scri" +
"pt>\r\n</body>\r\n\r\n</html>\r\n");

        }
    }
}
#pragma warning restore 1591
