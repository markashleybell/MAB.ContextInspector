#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MAB.ContextInspector.Views.ContextInspector
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using MAB.ContextInspector;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/ContextInspector/Index.cshtml")]
    public partial class Index : System.Web.Mvc.WebViewPage<MAB.ContextInspector.Models.ContextInspectorViewModel>
    {
        public Index()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\ContextInspector\Index.cshtml"
  
    Layout = null;

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n    <head>\r\n        <meta");

WriteLiteral(" name=\"viewport\"");

WriteLiteral(" content=\"width=device-width\"");

WriteLiteral(" />\r\n        <title>Index</title>\r\n        <style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(">\r\n            \r\n            *, *:before, *:after {\r\n                -moz-box-siz" +
"ing: border-box;\r\n                -webkit-box-sizing: border-box;\r\n             " +
"   box-sizing: border-box;\r\n            }\r\n\r\n            body {\r\n               " +
" margin: 0;\r\n                padding: 0;\r\n                font-family: Helvetica" +
", Arial, \'DejaVu Sans\', \'Liberation Sans\', Freesans, sans-serif;\r\n              " +
"  font-size: 14px;\r\n            }\r\n\r\n            table {\r\n                margin" +
": 0;\r\n                border-collapse: collapse;\r\n                border-spacing" +
": 0;\r\n                width: 100%;\r\n            }\r\n\r\n            td, th {\r\n     " +
"           border: 1px solid #ddd;\r\n                text-align: left;\r\n         " +
"       vertical-align: top;\r\n                padding: 6px 30px 6px 10px;\r\n      " +
"      }\r\n\r\n            tr.data:nth-child(odd) {\r\n                background-colo" +
"r: #F5F5F5;\r\n            }\r\n\r\n            tr.data:hover {\r\n                backg" +
"round-color: #b0c3ff;\r\n            }\r\n\r\n            #col-key {\r\n                " +
"width: 25%;\r\n            }\r\n            #col-type {\r\n                width: 10%;" +
"\r\n            }\r\n            #col-contents {\r\n                width: 65%;\r\n     " +
"       }\r\n            \r\n            pre {\r\n                outline: none;\r\n     " +
"           padding: 0;\r\n                margin: 0;\r\n            }\r\n\r\n           " +
" .string {\r\n                color: green;\r\n            }\r\n\r\n            .number " +
"{\r\n                color: #a70000;\r\n            }\r\n\r\n            .boolean {\r\n   " +
"             color: blue;\r\n            }\r\n\r\n            .null {\r\n               " +
" color: magenta;\r\n            }\r\n\r\n            .key {\r\n                color: #0" +
"00000;\r\n            }\r\n\r\n            .varkey, .vartype {\r\n                font-f" +
"amily: monospace;\r\n            }\r\n\r\n            .main th {\r\n                back" +
"ground-color: #00487d;\r\n                border-color: #00487d;\r\n                " +
"color: #fff;\r\n            }\r\n\r\n            #tooltip {\r\n                position:" +
" absolute;\r\n                bottom: 0; \r\n                right: 0;\r\n            " +
"    width: 300px;\r\n                height: 1em;\r\n                background-colo" +
"r: #000;\r\n                color: #fff;\r\n            }\r\n\r\n        </style>\r\n    <" +
"/head>\r\n<body>\r\n");

            
            #line 109 "..\..\Views\ContextInspector\Index.cshtml"
    
            
            #line default
            #line hidden
            
            #line 109 "..\..\Views\ContextInspector\Index.cshtml"
     if (Model.CacheVariables.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <table>\r\n            <colgroup>\r\n                <col");

WriteLiteral(" id=\"col-key\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-type\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-contents\"");

WriteLiteral(" />\r\n            </colgroup>\r\n            <tr");

WriteLiteral(" class=\"main\"");

WriteLiteral(">\r\n                <th");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">Cache</th>\r\n            </tr>\r\n            <tr>\r\n                <th>Key</th>\r\n " +
"               <th>Type</th>\r\n                <th>Contents</th>\r\n            </t" +
"r>\r\n");

            
            #line 125 "..\..\Views\ContextInspector\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 125 "..\..\Views\ContextInspector\Index.cshtml"
             foreach (var variable in Model.CacheVariables)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" class=\"data\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" class=\"varkey\"");

WriteLiteral(">");

            
            #line 128 "..\..\Views\ContextInspector\Index.cshtml"
                                  Write(variable.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <td");

WriteLiteral(" class=\"vartype\"");

WriteLiteral("><a");

WriteAttribute("title", Tuple.Create(" title=\"", 3186), Tuple.Create("\"", 3222)
            
            #line 129 "..\..\Views\ContextInspector\Index.cshtml"
, Tuple.Create(Tuple.Create("", 3194), Tuple.Create<System.Object, System.Int32>(variable.Value.FullTypeName
            
            #line default
            #line hidden
, 3194), false)
);

WriteLiteral(">");

            
            #line 129 "..\..\Views\ContextInspector\Index.cshtml"
                                                                           Write(variable.Value.ShortTypeName);

            
            #line default
            #line hidden
WriteLiteral("</a></td>\r\n                    <td");

WriteLiteral(" class=\"value\"");

WriteLiteral(">");

            
            #line 130 "..\..\Views\ContextInspector\Index.cshtml"
                                 Write(variable.Value.Item);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                </tr>\r\n");

            
            #line 132 "..\..\Views\ContextInspector\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n");

            
            #line 134 "..\..\Views\ContextInspector\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 135 "..\..\Views\ContextInspector\Index.cshtml"
     if (Model.ApplicationVariables.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <table>\r\n            <colgroup>\r\n                <col");

WriteLiteral(" id=\"col-key\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-type\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-contents\"");

WriteLiteral(" />\r\n            </colgroup>\r\n            <tr");

WriteLiteral(" class=\"main\"");

WriteLiteral(">\r\n                <th");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">Application</th>\r\n            </tr>\r\n            <tr>\r\n                <th>Key</" +
"th>\r\n                <th>Type</th>\r\n                <th>Contents</th>\r\n         " +
"   </tr>\r\n");

            
            #line 151 "..\..\Views\ContextInspector\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\ContextInspector\Index.cshtml"
             foreach (var variable in Model.ApplicationVariables)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" class=\"data\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" class=\"varkey\"");

WriteLiteral(">");

            
            #line 154 "..\..\Views\ContextInspector\Index.cshtml"
                                  Write(variable.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <td");

WriteLiteral(" class=\"vartype\"");

WriteLiteral("><a");

WriteAttribute("title", Tuple.Create(" title=\"", 4084), Tuple.Create("\"", 4120)
            
            #line 155 "..\..\Views\ContextInspector\Index.cshtml"
, Tuple.Create(Tuple.Create("", 4092), Tuple.Create<System.Object, System.Int32>(variable.Value.FullTypeName
            
            #line default
            #line hidden
, 4092), false)
);

WriteLiteral(">");

            
            #line 155 "..\..\Views\ContextInspector\Index.cshtml"
                                                                           Write(variable.Value.ShortTypeName);

            
            #line default
            #line hidden
WriteLiteral("</a></td>\r\n                    <td");

WriteLiteral(" class=\"value\"");

WriteLiteral(">");

            
            #line 156 "..\..\Views\ContextInspector\Index.cshtml"
                                 Write(variable.Value.Item);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                </tr>\r\n");

            
            #line 158 "..\..\Views\ContextInspector\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n");

            
            #line 160 "..\..\Views\ContextInspector\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 161 "..\..\Views\ContextInspector\Index.cshtml"
     if (Model.SessionVariables.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <table>\r\n            <colgroup>\r\n                <col");

WriteLiteral(" id=\"col-key\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-type\"");

WriteLiteral(" />\r\n                <col");

WriteLiteral(" id=\"col-contents\"");

WriteLiteral(" />\r\n            </colgroup>\r\n            <tr");

WriteLiteral(" class=\"main\"");

WriteLiteral(">\r\n                <th");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">Session</th>\r\n            </tr>\r\n            <tr>\r\n                <th>Key</th>\r" +
"\n                <th>Type</th>\r\n                <th>Contents</th>\r\n            <" +
"/tr>\r\n");

            
            #line 177 "..\..\Views\ContextInspector\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 177 "..\..\Views\ContextInspector\Index.cshtml"
             foreach (var variable in Model.SessionVariables)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteLiteral(" class=\"data\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" class=\"varkey\"");

WriteLiteral(">");

            
            #line 180 "..\..\Views\ContextInspector\Index.cshtml"
                                  Write(variable.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                    <td");

WriteLiteral(" class=\"vartype\"");

WriteLiteral("><a");

WriteAttribute("title", Tuple.Create(" title=\"", 4970), Tuple.Create("\"", 5006)
            
            #line 181 "..\..\Views\ContextInspector\Index.cshtml"
, Tuple.Create(Tuple.Create("", 4978), Tuple.Create<System.Object, System.Int32>(variable.Value.FullTypeName
            
            #line default
            #line hidden
, 4978), false)
);

WriteLiteral(">");

            
            #line 181 "..\..\Views\ContextInspector\Index.cshtml"
                                                                           Write(variable.Value.ShortTypeName);

            
            #line default
            #line hidden
WriteLiteral("</a></td>\r\n                    <td");

WriteLiteral(" class=\"value\"");

WriteLiteral(">");

            
            #line 182 "..\..\Views\ContextInspector\Index.cshtml"
                                 Write(variable.Value.Item);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                </tr>\r\n");

            
            #line 184 "..\..\Views\ContextInspector\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n");

            
            #line 186 "..\..\Views\ContextInspector\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" id=\"tooltip\"");

WriteLiteral("></div>\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        function syntaxHighlight(json) {\r\n            if (json.indexOf(\'{\') !=" +
" -1)\r\n                json = JSON.stringify(JSON.parse(json), undefined, 4);\r\n\r\n" +
"            json = json.replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/" +
"g, \'&gt;\');\r\n            return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"]" +
")*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function " +
"(match) {\r\n                var cls = \'number\';\r\n                if (/^\"/.test(ma" +
"tch)) {\r\n                    if (/:$/.test(match)) {\r\n                        cl" +
"s = \'key\';\r\n                        match = match.replace(/\\\"/gi, \'\')\r\n         " +
"           } else {\r\n                        cls = \'string\';\r\n                  " +
"  }\r\n                } else if (/true|false/.test(match)) {\r\n                   " +
" cls = \'boolean\';\r\n                } else if (/null/.test(match)) {\r\n           " +
"         cls = \'null\';\r\n                }\r\n                return \'<span class=\"" +
"\' + cls + \'\">\' + match + \'</span>\';\r\n            });\r\n        }\r\n\r\n        funct" +
"ion addEvent(evnt, elem, func) {\r\n            if (elem.addEventListener)  // W3C" +
" DOM\r\n                elem.addEventListener(evnt, func, false);\r\n            els" +
"e if (elem.attachEvent) { // IE DOM\r\n                elem.attachEvent(\"on\" + evn" +
"t, func);\r\n            }\r\n            else { // No much to do\r\n                e" +
"lem[\"on\" + evnt] = func;\r\n            }\r\n        }\r\n\r\n        var elements = doc" +
"ument.getElementsByClassName(\'value\');\r\n        for (var i = 0; i < elements.len" +
"gth; i++) {\r\n            elements[i].innerHTML = \'<pre>\' + syntaxHighlight(eleme" +
"nts[i].innerHTML) + \'</pre>\';\r\n        }\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n");

        }
    }
}
#pragma warning restore 1591
